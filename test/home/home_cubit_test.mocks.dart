// Mocks generated by Mockito 5.4.5 from annotations
// in weather_app/test/home/home_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:weather_app/core/services/network/api_error_model.dart' as _i5;
import 'package:weather_app/features/home/data/models/city_weather_response_model.dart'
    as _i4;
import 'package:weather_app/features/home/data/repo/home_repo.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [HomeRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeRepo extends _i1.Mock implements _i2.HomeRepo {
  MockHomeRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<({_i4.CityWeatherResponseModel? city, _i5.ApiErrorModel? error})>
  getCityWeather(String? cityName) =>
      (super.noSuchMethod(
            Invocation.method(#getCityWeather, [cityName]),
            returnValue: _i3.Future<
              ({_i4.CityWeatherResponseModel? city, _i5.ApiErrorModel? error})
            >.value((city: null, error: null)),
          )
          as _i3.Future<
            ({_i4.CityWeatherResponseModel? city, _i5.ApiErrorModel? error})
          >);
}
